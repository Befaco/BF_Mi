// Input / output definitions
// DAC Ports
#define PITCHCV 0
#define VELOC 1 
#define MODUL 2
#define BEND 3

// In/Out pins Micro
#define PINCLOCK 5
#define PINGATE 6
#define PINLEARN 7
#define PINLED 13
#define ANALOGPIN 0

//Variables
// Var MIDI
byte midiChannel=1; // Initial channel used unless changed in learn mode
byte MIDIRun=0; // Set to 0 to init in stop condition
byte NotesOn[16]; // Stores notes on (16 max)
byte VelocOn[16]; // Stores velocities on (16 max)
byte nNotesOn=0; // Number of notes on 
	These three var are used to control when several keys are pressed
	The logic used is last key pressed is on in the CV, when released, the previous oldest note is set on the CV.

// Conversion classes functions
RangeConv: Simple two point interpolation
MultiPointConv: Interpolation within 20 intervals

	
// Main Loop
	MIDI.read(); // Will read serial port for MIDI messages and trigger callback functions as they are received
	
	//learn MODE
	Started with digital pin PINLEARN, starts with EnterLearnMode() function and repeat DoLearnCycle() until finished (5 seconds)
	
	
	
	

// MIDIHandle
HandleNoteOn // Do whatever you want when you receive a Note On.
	// If in Learn Mode, pass the note data to learn function LearnThis
	// Process only active channel, if not return
	// 0 Velocity is processed as a NoteOff, and return
	// If is a new note (not repeated), add to the list and play it
	
HandleNoteOff // Do whatever you want when you receive a Note Off.
	// Do not process in Learn Mode
	// Process only active channel, if not return
	// If the note is not in the note on list, return (strange anyway...)
	// If it is the lat note active in the list, set CV off
	// Else remove the note from the list and play to CV the last note (oldest) in the list

	
	
// MIDILearn
# define ERRORCYCLES 30 // Cycles to repeat to average the error (read below)

EnterLEarnMode // Initialize Learn Mode

DoLearnCycle // Learn Mode Cycle function
	// Blink the led every 500 ms to indicate we are in Learn Mode
	
	// Calibration cycle
	// We will repeat the following cycle while in learn mode
	// For notes 0 to 28 (more than 2 octaves)
		// Send them to CV
		// Read values in analog port
		// Convert this value to milivolts (Internal Reference used: 1100 mv equals 1024 steps)
		// We will accumulate for notes 3 to 26 (2 octaves)
	
	// The value accumulated (2 octaves) should be 1000 mV since we are using a 50% voltage divider
	// Sum the error for each cycle
	// Every ERRORCYCLES Cycles compensate the DAC range conversion based in the Sum of errors
	
	// When 5 seconds are reached, end Learn Cycle
	
LearnThis // Capture channel and new minimum note